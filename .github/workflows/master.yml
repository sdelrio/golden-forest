name: Relese gh-pages

on:
  push:
    branches:
      - master
    paths-ignore:
      # - ".github/workflows/**"
      - "README.md"


permissions: # required by action JamesIves/github-pages-deploy-action
  contents: write

concurrency: ci-${{ github.ref }}

jobs:
  gh-release:
    name: GitHub Pages Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '>=18.x'
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4

      - name: Get opened PRs
        id: opened-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Generate the JSON array
          list_array="$(gh pr list --state open --json number --template '{{range .}}pr-preview/pr-{{ .number}}{{"\n"}}{{end}}')"

          # Define a delimiter
          delimiter="$(uuidgen)"
          echo "delimiter is --> $delimiter" # Optional: for debugging

          # Write the output using the delimiter for multiline support
          echo "prs<<$delimiter" >> $GITHUB_OUTPUT
          echo "$list_array" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT # Optional: for debugging
          echo "list_array --> $list_array" # Optional: for debugging

      - name: Debug Info
        run: |
          # Access the output using the steps context
          echo "Accessed output directly: ${{ steps.opened-prs.outputs.prs }}"

          # You can also assign it to an environment variable, but be mindful of shell interpretation
          # It's often safer to use the steps context directly if possible or parse the JSON.
          OPENPRS_LIST='${{ steps.opened-prs.outputs.prs }}'
          echo "Assigned to shell variable (be cautious with direct echo due to special chars):"
          # The following echo might still have issues depending on the JSON content and shell.
          # A safer approach is to process the JSON string with a tool like jq or parse it in a script.
          # echo "$OPENPRS_JSON"
          #
          # Optional: for debugging
          echo "Processing with echo:"
          echo "$OPENPRS_LIST"
          echo "Default node version:"
          node --version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: './yarn.lock'

      # - name: Cache Node.js modules to speed up future builds
      #   id: cache-node-modules
      #   uses: actions/cache@v4
      #   with:
      #     path: ./node_modules
      #     key: docusaurus-${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('./yarn.lock') }}
      #     restore-keys: |
      #       docusaurus-${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}

      # - name: Install Node Packages
      #   if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
      #   run: |
      #     if [ -e yarn.lock ]; then
      #       yarn install --frozen-lockfile --prefer-offline
      #     else
      #       exit 1
      #     fi

      - name: Build Docusaurus
        env:
          USE_SSH: true
          GIT_USER: git
          DOCUSAURUS_IGNORE_SSG_WARNINGS: true
          BASE_URL: ""
        run: |
          git config --global user.email "sdelrio@users.noreply.github.com"
          git config --global user.name "gh-actions"
          if [ -e yarn.lock ]; then
            yarn build
          else
            exit 1
          fi

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy.
          clean: true
          clean-exclude: ${{ steps.opened-prs.outputs.prs }}

