name: Build on Pull Requests

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      # - closed
    branches:
      - master
    paths-ignore:
      # - ".github/workflows/**"
      - "README.md"

concurrency: ci-${{ github.ref }}

jobs:
  checks:
    name: Build and PR build publish
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      BUILD_FOLDER: build
      PRODUCTION_BRANCH: master
      BASE_URL: 
      NODE_VERSION: '>=18.x'
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4

      - name: Get opened PRs
        id: opened-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Generate the JSON array
          json_array="$(gh pr list --state open --json number --jq 'map("mypath/pr-\(.number)")')"

          # Define a delimiter
          delimiter="$(uuidgen)"
          echo "delimiter is --> $delimiter" # Optional: for debugging

          # Write the output using the delimiter for multiline support
          echo "prs<<$delimiter" >> $GITHUB_OUTPUT
          echo "$json_array" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

          echo "json_array --> $json_array" # Optional: for debugging
          cat $GITHUB_OUTPUT # Optional: for debugging

      - name: Info
        run: |
         # Access the output using the steps context
          echo "Accessed output directly: ${{ steps.opened-prs.outputs.prs }}"

          # You can also assign it to an environment variable, but be mindful of shell interpretation
          # It's often safer to use the steps context directly if possible or parse the JSON.
          OPENPRS_JSON='${{ steps.opened-prs.outputs.prs }}'
          echo "Assigned to shell variable (be cautious with direct echo due to special chars):"
          # The following echo might still have issues depending on the JSON content and shell.
          # A safer approach is to process the JSON string with a tool like jq or parse it in a script.
          # echo "$OPENPRS_JSON"
          #
          #
          #
          # Example of processing with jq (requires jq to be installed in the runner, ubuntu-latest has it)
          echo "Processing with echo:"
          echo "$OPENPRS_JSON" 
          echo "Processing with jq:"
          echo "$OPENPRS_JSON" | jq -r '.[]'

          # If you need to iterate or use it in a specific way, parsing is necessary.
          # For example, if the output is ["mypath/pr-123", "mypath/pr-456"]
          # You might need to parse it into a shell array or process it line by line after parsing.

      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: github.event.action != 'closed' # You might want to skip the build if the PR has been closed
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          override_local_node: false
          cache-dependency-path: './yarn.lock'

      - name: Cache Node.js modules to speed up future builds
        if: github.event.action != 'closed' # You might want to skip the build if the PR has been closed
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: docusaurus-${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            docusaurus-${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Install Node Packages
         # You might want to skip the build if the PR has been closed
        if: (github.event.action != 'closed') &&
            (steps.cache-node-modules.outputs.cache-hit != 'true')
        run: |
          if [ -e yarn.lock ]; then
            # use network only if dependencies are not available in local cache with --prefer-offline
            yarn install --frozen-lockfile --prefer-offline
          else
            exit 1
          fi

      - name: Build Docusaurus
        if: github.event.action != 'closed' # You might want to skip the build if the PR has been closed
        env:
          BASE_URL: /pr-preview/pr-${{ github.event.number }}
          DOCUSAURUS_IGNORE_SSG_WARNINGS: true
        run: |
          echo BASE_URL=${{ env.BASE_URL }}
          if [ -e yarn.lock ]; then
            yarn build
          else
            exit 1
          fi

      - name: Deploy preview
        id: preview-step
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./build/
          # umbrella-dir: pr-preview

      - name: Info
        if: ${{ env.deployment_action }} == "deploy"
        run: |
          echo "Preview visible at ${{ env.preview_url }}"

      # Sample steps.preview-step.output:
      # empty_dir_path: /tmp/tmp.sQBm9GZB65
      # deployment_action: deploy
      # preview_file_path: pr-preview/pr-32
      # pages_base_url: sdelrio.github.io/golden-forest
      # preview_url_path: pr-preview/pr-32
      # preview_url: https://sdelrio.github.io/golden-forest/pr-preview/pr-32/
      # action_repository: rossjrw/pr-preview-action
      # action_version: v1.6.1
      # action_start_time: 2025-05-03 13:46 UTC
      # deployment_status: skipped


