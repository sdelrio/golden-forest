"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([["1297"],{35394:function(e,t,o){o.r(t),o.d(t,{default:()=>d,frontMatter:()=>s,metadata:()=>r,assets:()=>i,toc:()=>c,contentTitle:()=>l});var r=JSON.parse('{"id":"Cloud-Platform/Kubernetes/Concepts/HPA/HPA","title":"Horizontal Pod Autoscaler","description":"In Kubernetes, a HorizontalPodAutoscaler automatically updates a workload resource (such as a Deployment or StatefulSet), with the aim of automatically scaling the workload to match demand.","source":"@site/docs/Cloud-Platform/Kubernetes/Concepts/HPA/HPA.md","sourceDirName":"Cloud-Platform/Kubernetes/Concepts/HPA","slug":"/Cloud-Platform/Kubernetes/Concepts/HPA/","permalink":"/pr-preview/pr-33/docs/Cloud-Platform/Kubernetes/Concepts/HPA/","draft":false,"unlisted":false,"editUrl":"https://github.com/sdelrio/golden-forest/edit/master/docs/Cloud-Platform/Kubernetes/Concepts/HPA/HPA.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Resources/Limits","permalink":"/pr-preview/pr-33/docs/Cloud-Platform/Kubernetes/Concepts/Configuration/resource-managment-pods"},"next":{"title":"HPA autoscalers","permalink":"/pr-preview/pr-33/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers"}}'),n=o("85893"),a=o("50065");let s={},l="Horizontal Pod Autoscaler",i={},c=[{value:"References",id:"references",level:2}];function u(e){let t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"horizontal-pod-autoscaler",children:"Horizontal Pod Autoscaler"})}),"\n",(0,n.jsx)(t.p,{children:"In Kubernetes, a HorizontalPodAutoscaler automatically updates a workload resource (such as a Deployment or StatefulSet), with the aim of automatically scaling the workload to match demand."}),"\n",(0,n.jsx)(t.p,{children:"Horizontal scaling means that the response to increased load is to deploy more Pods. This is different from vertical scaling, which for Kubernetes would mean assigning more resources (for example: memory or CPU) to the Pods that are already running for the workload."}),"\n",(0,n.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/",children:"Horizontal Pod Autoscaling offical doc"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/",children:"HorizontalPodAutoscaler Walkthrough"})}),"\n"]})]})}function d(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},50065:function(e,t,o){o.d(t,{Z:function(){return l},a:function(){return s}});var r=o(67294);let n={},a=r.createContext(n);function s(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);