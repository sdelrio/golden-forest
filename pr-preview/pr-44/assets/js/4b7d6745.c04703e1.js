"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([["3391"],{26792:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"OS/GNU-Linux/NixOS/install-system","title":"Installing NixOS","description":"The pretty basic install will need a configuration.nix, additionally the default installation also includes a hardware-configuration.nix.","source":"@site/docs/OS/GNU-Linux/NixOS/install-system.md","sourceDirName":"OS/GNU-Linux/NixOS","slug":"/OS/GNU-Linux/NixOS/install-system","permalink":"/pr-preview/pr-44/docs/OS/GNU-Linux/NixOS/install-system","draft":false,"unlisted":false,"editUrl":"https://github.com/sdelrio/golden-forest/edit/master/docs/OS/GNU-Linux/NixOS/install-system.md","tags":[{"inline":true,"label":"nixos","permalink":"/pr-preview/pr-44/docs/tags/nixos"},{"inline":true,"label":"nix","permalink":"/pr-preview/pr-44/docs/tags/nix"},{"inline":true,"label":"nixos-install","permalink":"/pr-preview/pr-44/docs/tags/nixos-install"}],"version":"current","frontMatter":{"title":"Installing NixOS","date":20231014,"author":"sdelrio","tags":["nixos","nix","nixos-install"]},"sidebar":"tutorialSidebar","previous":{"title":"NixOS Flakes","permalink":"/pr-preview/pr-44/docs/OS/GNU-Linux/NixOS/flakes"},"next":{"title":"NixOS root on ZFS","permalink":"/pr-preview/pr-44/docs/OS/GNU-Linux/NixOS/install-zfs"}}'),a=i("85893"),t=i("50065");let r={title:"Installing NixOS",date:0x134b366,author:"sdelrio",tags:["nixos","nix","nixos-install"]},l="Installing",o={},c=[{value:"NixOS switch",id:"nixos-switch",level:2},{value:"Generations",id:"generations",level:2},{value:"Revert generation",id:"revert-generation",level:3},{value:"List generations",id:"list-generations",level:3},{value:"Delete generations",id:"delete-generations",level:3},{value:"Upgrade NixOs packages",id:"upgrade-nixos-packages",level:2},{value:"Hardware",id:"hardware",level:2},{value:"Show hardware configs",id:"show-hardware-configs",level:3},{value:"Hardware profiles",id:"hardware-profiles",level:3}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"installing",children:"Installing"})}),"\n",(0,a.jsxs)(n.p,{children:["The pretty basic install will need a ",(0,a.jsx)(n.code,{children:"configuration.nix"}),", additionally the default installation also includes a ",(0,a.jsx)(n.code,{children:"hardware-configuration.nix"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://nixos.org/manual/nixos/stable/#sec-installation-manual-installing",children:"https://nixos.org/manual/nixos/stable/#sec-installation-manual-installing"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The command ",(0,a.jsx)(n.code,{children:"nixos-generate-config"})," can generate those initial configuration\nfiles for you. Usually we will mount the target hardisk in some directory, in\nthis sample will be on ",(0,a.jsx)(n.code,{children:"/mnt"})," so the tool will write the files into ",(0,a.jsx)(n.code,{children:"/mnt/etc/nixos"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nixos-generate-config --root /mnt\nwriting /mnt/etc/nixos/hardware-configuration.nix...\nwriting /mnt/etc/nixos/configuration.nix...\nFor more hardware-specific settings, see https://github.com/nixOs/nixos-hardware.\n"})}),"\n",(0,a.jsxs)(n.p,{children:["At this point we can edit the file and take a look or even add something (",(0,a.jsx)(n.code,{children:"vi /mnt/etc/nixos/configuration.nix"}),").\n",(0,a.jsx)(n.code,{children:"Once we have the"}),"configuration.nix",(0,a.jsx)(n.code,{children:"we can use the command"}),"nixos-install`"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nixos-install\ncopying channel...\nbuilding the configuration in /mnt/etc/nixos/configuration.nix...\ncopying path '/nix/store/(...)' from 'https://cache.nix.org'...\ncopying path '/nix/store/(...)' to 'local'...\n(..)\n"})}),"\n",(0,a.jsx)(n.p,{children:"This command should include the grub install so after it finish we can reboot the system."}),"\n",(0,a.jsx)(n.h2,{id:"nixos-switch",children:"NixOS switch"}),"\n",(0,a.jsxs)(n.p,{children:["Once the system is started we can change the ",(0,a.jsx)(n.code,{children:"/etc/nixos/configuration.nix"}),", after\nthat we can apply the change siwth the ",(0,a.jsx)(n.code,{children:"nixos-rebuild swith"})," or we can test it\nbefore applying it with the ",(0,a.jsx)(n.code,{children:"nixos-rebuild test"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nixos-rebuild switch\nsudo nixos-rebuild test\n"})}),"\n",(0,a.jsx)(n.h2,{id:"generations",children:"Generations"}),"\n",(0,a.jsxs)(n.p,{children:["Every time the system state is rebuilt using ",(0,a.jsx)(n.code,{children:"nixos-rebuild switch"}),", a new generation\nis created. The previous generations are usually added to the grub menu in case you\nneed to go back"]}),"\n",(0,a.jsx)(n.h3,{id:"revert-generation",children:"Revert generation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Roll back a user environment"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nix-env --rollback\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Roll back a system environment"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nixos-rebuild switch --rollback\n"})}),"\n",(0,a.jsx)(n.h3,{id:"list-generations",children:"List generations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nix-env --list-generations --profile /nix/var/nix/profiles/system\n"})}),"\n",(0,a.jsx)(n.h3,{id:"delete-generations",children:"Delete generations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nix profile wipe-history --profile /nix/var/nix/profiles/system --older-than 14d\n"})}),"\n",(0,a.jsx)(n.h2,{id:"upgrade-nixos-packages",children:"Upgrade NixOs packages"}),"\n",(0,a.jsxs)(n.p,{children:["Will be the classic equivalent of ",(0,a.jsx)(n.code,{children:"apt-get upgrade"})," or ",(0,a.jsx)(n.code,{children:"yum check-update"}),". It will\nget all the packages and upgrade to the latest verions."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nixos-rebuild switch --upgrade\n"})}),"\n",(0,a.jsx)(n.h2,{id:"hardware",children:"Hardware"}),"\n",(0,a.jsx)(n.h3,{id:"show-hardware-configs",children:"Show hardware configs"}),"\n",(0,a.jsx)(n.p,{children:"It can be usefull if we add or change some hardware which can be detected by the basic configurator."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nixos-generate-config --show-hardware-config \n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nixos-generate-config --show-hardware-config --no-filesystems\n"})}),"\n",(0,a.jsx)(n.h3,{id:"hardware-profiles",children:"Hardware profiles"}),"\n",(0,a.jsx)(n.p,{children:"Some notebooks and other systems hardware configurations from the official NixOS github:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/NixOS/nixos-hardware",children:"https://github.com/NixOS/nixos-hardware"})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return r}});var s=i(67294);let a={},t=s.createContext(a);function r(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);