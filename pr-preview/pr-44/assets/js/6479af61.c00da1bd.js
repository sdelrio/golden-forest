"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([["3796"],{8015:function(e,n,s){s.r(n),s.d(n,{default:()=>p,frontMatter:()=>r,metadata:()=>o,assets:()=>c,toc:()=>d,contentTitle:()=>i});var o=JSON.parse('{"id":"Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies","title":"k8s Network Policies","description":"It allows you to control the flow of the traffic to specify how the Pod is allowed to communicate (IP address and port).","source":"@site/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies.md","sourceDirName":"Cloud-Platform/Kubernetes/Concepts/Networking","slug":"/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies","permalink":"/pr-preview/pr-44/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies","draft":false,"unlisted":false,"editUrl":"https://github.com/sdelrio/golden-forest/edit/master/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"HPA autoscalers","permalink":"/pr-preview/pr-44/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers"},"next":{"title":"K8s Secrets","permalink":"/pr-preview/pr-44/docs/Cloud-Platform/Kubernetes/Concepts/k8s-secrets"}}'),l=s("85893"),t=s("50065");let r={},i="k8s Network Policies",c={},d=[];function a(e){let n={a:"a",code:"code",h1:"h1",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"k8s-network-policies",children:"k8s Network Policies"})}),"\n",(0,l.jsx)(n.p,{children:"It allows you to control the flow of the traffic to specify how the Pod is allowed to communicate (IP address and port)."}),"\n",(0,l.jsx)(n.p,{children:"You can communicate with:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Other allowed pods."}),"\n",(0,l.jsx)(n.li,{children:"Alowed Namespaces."}),"\n",(0,l.jsx)(n.li,{children:"IP Blocks"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["By default no traffic is filtered until a pod gets a policy, then, only the specified ",(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/",children:(0,l.jsx)(n.code,{children:"NetworkPolicy"})})," connections are allowed."]}),"\n",(0,l.jsx)(n.mermaid,{value:'    flowchart BT\n\n        subgraph level-1 [" "]\n            subgraph sub-level-1 ["and/or"]\n              ps1[podSelector]\n              ns1[namespaceSelector]\n            end\n            ip1[ipBlock]\n        end\n        subgraph level-2 ["and/or"]\n            subgraph sub-level-2 ["and/or"]\n            ps2[podSelector]\n            ns2[namespaceSelector]\n            end\n            ip2[ipBlock]\n        end\n\n        from --- np\n        to --- np\n\n        subgraph kind[" "]\n            np[NetworkPolicy]\n        end\n\n        ps1 --- from\n        ns1 --- from\n        ip1 --- from\n\n\n        ps2 --- to\n        ns2 --- to\n        ip2 --- to\n\n        subgraph section-from ["ingress"]\n            from\n        end\n        subgraph section-to ["egress"]\n            to\n        end\n\n        linkStyle default stroke-width:2px,fill:none,stroke:#c0c0c0\n\n        classDef green fill:#beb,stroke:#ada,stroke-width:2px\n        classDef gray fill:#eee,stroke:#999,stroke-width:2px\n        classDef yellow fill:#eeb,stroke:#dda,stroke-width:2px\n        classDef section color:#808080,fill:none,stroke:#c0c0c0,stroke-width:2px\n        classDef npstyle color:#808020,fill:#F0F0F0,stroke:#c0c020,stroke-width:2px\n        classDef ext color:#808020,fill:none,stroke:#606010,stroke-width:2px\n\n        class level-1,level-2,section-from,section-to,kind section\n        class sub-level-1,sub-level-2 gray\n        class np npstyle'}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"NetworkPolicy"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ingress[from]"}),": Traffic allowed to go ",(0,l.jsx)(n.strong,{children:"into"})," the pod.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"selector"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"egress[to]"}),": Traffic allowed to go ",(0,l.jsx)(n.strong,{children:"out"})," of pod.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"selector"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"selectors\nJust as in the deployments, we can use labels to determine which Pods or namespaces the NetworkPolicy applies:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"podSelector:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"matchLabels:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"key: value"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"namespaceSelector:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"matchLabels"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"key: value"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ipBlock:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"cidr:"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"except:"})," list of cidrs"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return i},a:function(){return r}});var o=s(67294);let l={},t=o.createContext(l);function r(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);