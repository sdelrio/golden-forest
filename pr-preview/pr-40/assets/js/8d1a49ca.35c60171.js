"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([["7708"],{66622:function(e,s,t){t.r(s),t.d(s,{default:()=>u,frontMatter:()=>a,metadata:()=>n,assets:()=>c,toc:()=>d,contentTitle:()=>i});var n=JSON.parse('{"id":"OS/GNU-Linux/ZFS/zsys","title":"ZSysctl","description":"ZSys is a daemon and a client for zfs systemtargeting and enhanced ZOL experience. It was included in Ubuntu 20 and Linux Mint 20.","source":"@site/docs/OS/GNU-Linux/ZFS/zsys.md","sourceDirName":"OS/GNU-Linux/ZFS","slug":"/OS/GNU-Linux/ZFS/zsys","permalink":"/pr-preview/pr-40/docs/OS/GNU-Linux/ZFS/zsys","draft":false,"unlisted":false,"editUrl":"https://github.com/sdelrio/golden-forest/edit/master/docs/OS/GNU-Linux/ZFS/zsys.md","tags":[{"inline":true,"label":"zfs","permalink":"/pr-preview/pr-40/docs/tags/zfs"},{"inline":true,"label":"zsys","permalink":"/pr-preview/pr-40/docs/tags/zsys"}],"version":"current","frontMatter":{"title":"ZSysctl","date":20211106,"author":"sdelrio","tags":["zfs","zsys"]},"sidebar":"tutorialSidebar","previous":{"title":"ZFS","permalink":"/pr-preview/pr-40/docs/OS/GNU-Linux/ZFS/"},"next":{"title":"Automatic Upgrades","permalink":"/pr-preview/pr-40/docs/OS/GNU-Linux/automatic-upgrades"}}'),l=t("85893"),r=t("50065");let a={title:"ZSysctl",date:0x13465a2,author:"sdelrio",tags:["zfs","zsys"]},i="Zsys",c={},d=[{value:"Features",id:"features",level:2},{value:"Sample ZSys config",id:"sample-zsys-config",level:2},{value:"Garbage collector",id:"garbage-collector",level:2},{value:"Call GC",id:"call-gc",level:3},{value:"Status of the GC",id:"status-of-the-gc",level:3},{value:"GC timers",id:"gc-timers",level:3},{value:"Refresh",id:"refresh",level:2},{value:"Reload",id:"reload",level:2},{value:"Remove state",id:"remove-state",level:2},{value:"User state",id:"user-state",level:3},{value:"System state",id:"system-state",level:3},{value:"Whole system",id:"whole-system",level:3},{value:"User State without any dependency but linked to a system state",id:"user-state-without-any-dependency-but-linked-to-a-system-state",level:3},{value:"References",id:"references",level:2}];function o(e){let s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"zsys",children:"Zsys"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.a,{href:"https://github.com/ubuntu/zsys",children:"ZSys"})," is a daemon and a client for zfs systemtargeting and enhanced ZOL experience. It was included in Ubuntu 20 and Linux Mint 20."]}),"\n",(0,l.jsx)(s.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"Every time you do an apt-get install the daemon will snapshot your OS pool."}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"At OS boot time you can select a previous snapshot."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"sample-zsys-config",children:"Sample ZSys config"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"/etc/zsys.conf"})}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-yaml",children:"history:\n  # https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/\n  # Keep at least n history entry per unit of time if enough of them are present\n  # The order condition the bucket start and end dates (from most recent to oldest)\n  gcstartafter: 1\n  keeplast: 10 # Minimum number of recent states to keep.\n  #    - name:             Abitrary name of the bucket\n  #      buckets:          Number of buckets over the interval\n  #      bucketlength:     Length of each bucket in days\n  #      samplesperbucket: Number of datasets to keep in each bucket\n  gcrules:\n    - name: PreviousDay\n      buckets: 1\n      bucketlength: 1\n      samplesperbucket: 3\n    - name: PreviousWeek\n      buckets: 5\n      bucketlength: 1\n      samplesperbucket: 1\n    - name: PreviousMonth\n      buckets: 2\n      bucketlength: 14\n      samplesperbucket: 1\ngeneral:\n  # Minimal free space required before taking a snapshot\n  minfreepoolspace: 18\n  # Daemon timeout in seconds\n  timeout: 60\n"})}),"\n",(0,l.jsx)(s.h2,{id:"garbage-collector",children:"Garbage collector"}),"\n",(0,l.jsx)(s.h3,{id:"call-gc",children:"Call GC"}),"\n",(0,l.jsx)(s.p,{children:"Call zysysd garbage collection without waiting daily INFO output"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"zsysctl service gc --all -v\n"})}),"\n",(0,l.jsxs)(s.p,{children:["To see with extra debug info add ",(0,l.jsx)(s.code,{children:"-vv"})]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"zsysctl service gc --all -vv\n"})}),"\n",(0,l.jsx)(s.h3,{id:"status-of-the-gc",children:"Status of the GC"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"systemctl status zsys-gc\n"})}),"\n",(0,l.jsx)(s.h3,{id:"gc-timers",children:"GC timers"}),"\n",(0,l.jsx)(s.p,{children:"GC collecting timers"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"systemctl list-timers zsys-gc\n"})}),"\n",(0,l.jsx)(s.p,{children:"GC collecting timers loaded but inactive"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"systemctl list-timers zsys-gc --all\n"})}),"\n",(0,l.jsx)(s.h2,{id:"refresh",children:"Refresh"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Re-Scan any ZFS datasheet"}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"zsysctl service refresh\n"})}),"\n",(0,l.jsx)(s.h2,{id:"reload",children:"Reload"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["Reload ",(0,l.jsx)(s.code,{children:"zsysd"})," daemon"]}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"zsysctl service reload\n"})}),"\n",(0,l.jsx)(s.h2,{id:"remove-state",children:"Remove state"}),"\n",(0,l.jsx)(s.h3,{id:"user-state",children:"User state"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"$ zsysctl show --full |grep r48a3r\n$ zsysctl state remove r48a3r\nrpool/USERDATA/sdelrio_0y06wn@autozsys_r48a3r will be detached from system state rpool/ROOT/ubuntu_awq93l@autozsys_r48a3r\n"})}),"\n",(0,l.jsx)(s.h3,{id:"system-state",children:"System state"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"$ sudo zsysctl state remove r48a3r\n"})}),"\n",(0,l.jsx)(s.h3,{id:"whole-system",children:"Whole system"}),"\n",(0,l.jsxs)(s.p,{children:["adding ",(0,l.jsx)(s.code,{children:"--system"})," (",(0,l.jsx)(s.code,{children:"/boot"})," included)"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"$ sudo zsysctl state remove r48a3r --system\n"})}),"\n",(0,l.jsx)(s.h3,{id:"user-state-without-any-dependency-but-linked-to-a-system-state",children:"User State without any dependency but linked to a system state"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"$ zsysctl state remove rpool/USERDATA/didrocks_e2jj0s@autozsys_iynia9\nrpool/USERDATA/didrocks_e2jj0s@autozsys_iynia9 will be detached from system state rpool/ROOT/ubuntu_qiq15o@autozsys_iynia9\n\nWould you like to proceed [y/N]? y\n"})}),"\n",(0,l.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"https://github.com/ubuntu/zsys",children:"https://github.com/ubuntu/zsys"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/",children:"https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/"})}),"\n"]})]})}function u(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},50065:function(e,s,t){t.d(s,{Z:function(){return i},a:function(){return a}});var n=t(67294);let l={},r=n.createContext(l);function a(e){let s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);