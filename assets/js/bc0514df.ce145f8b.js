"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[3997],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},77154:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(83117),r=(a(67294),a(3905));const o={title:"TrueNAS SCALE Install",date:20230901,author:"sdelrio",tags:["zfs","zpool","nas"]},l="TrueNAS SCALE Install",s={unversionedId:"OS/GNU-Linux/TrueNAS/truenas-install",id:"OS/GNU-Linux/TrueNAS/truenas-install",title:"TrueNAS SCALE Install",description:"By default Truenas will install in one (or several disk if want to mirror) using all space available on the disk, without posibility for partition.",source:"@site/docs/OS/GNU-Linux/TrueNAS/truenas-install.md",sourceDirName:"OS/GNU-Linux/TrueNAS",slug:"/OS/GNU-Linux/TrueNAS/truenas-install",permalink:"/docs/OS/GNU-Linux/TrueNAS/truenas-install",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/OS/GNU-Linux/TrueNAS/truenas-install.md",tags:[{label:"zfs",permalink:"/docs/tags/zfs"},{label:"zpool",permalink:"/docs/tags/zpool"},{label:"nas",permalink:"/docs/tags/nas"}],version:"current",frontMatter:{title:"TrueNAS SCALE Install",date:20230901,author:"sdelrio",tags:["zfs","zpool","nas"]},sidebar:"tutorialSidebar",previous:{title:"TrueNAS",permalink:"/docs/OS/GNU-Linux/TrueNAS/"},next:{title:"ZFS",permalink:"/docs/OS/GNU-Linux/ZFS/"}},i={},p=[{value:"Using a smaller partition for the root pool",id:"using-a-smaller-partition-for-the-root-pool",level:2},{value:"Use the free space to create a ZVOL",id:"use-the-free-space-to-create-a-zvol",level:3},{value:"References",id:"references",level:3}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"truenas-scale-install"},"TrueNAS SCALE Install"),(0,r.kt)("p",null,"By default Truenas will install in one (or several disk if want to mirror) using all space available on the disk, without posibility for partition."),(0,r.kt)("h2",{id:"using-a-smaller-partition-for-the-root-pool"},"Using a smaller partition for the root pool"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install on a small temporary disk (sda in this case)."),(0,r.kt)("li",{parentName:"ul"},"Copy partitions from temporary disk to target disk (nvme2n1 in this case):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sgdisk --backup=/root/partition_table_sda /dev/sda\nsgdisk --load-backup=/root/partition_table_sda /dev/nvme2n1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Then Reboot the system through the UI or by CLI")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"reboot\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Attach target disk parition to temporary install disk partition, as if you were preparing a mirror")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"zpool attach boot-pool sda3 nvme2n1p3\nzpool status boot-pool\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Wait for resilver"),(0,r.kt)("li",{parentName:"ul"},"Copy the content of the grub and UEFI partitions")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"dd if=/dev/sda1 of=/dev/nvme2n1p1\ndd if=/dev/sda2 of=/dev/nvme2n1p2\nsync\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Detach temporary install disk (sda in this example)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"zpool offline boot-pool sda\nzpool detach boot-pool sda\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"root@truenas[~]# zpool status boot-pool\n\n  pool: boot-pool\n state: ONLINE\nstatus: Some supported and requested features are not enabled on the pool.\n    The pool can still be used, but some features are unavailable.\naction: Enable all features using 'zpool upgrade'. Once this is done,\n    the pool may no longer be accessible by software that does not support\n    the features. See zpool-features(7) for details.\n  scan: scrub repaired 0B in 00:00:04 with 0 errors on Tue Aug 29 03:45:05 2023\nconfig:\n\n    NAME         STATE     READ WRITE CKSUM\n    boot-pool    ONLINE       0     0     0\n      nvme2n1p3  ONLINE       0     0     0\n\nerrors: No known data errors\n")),(0,r.kt)("h3",{id:"use-the-free-space-to-create-a-zvol"},"Use the free space to create a ZVOL"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check partition with ",(0,r.kt)("inlineCode",{parentName:"li"},"parte"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(parted) print free                                                       \nModel: Samsung SSD 980 500GB (nvme)\nDisk /dev/nvme2n1: 500GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n\nNumber  Start   End     Size    File system  Name  Flags\n        17.4kB  2097kB  2080kB  Free Space\n 1      2097kB  3146kB  1049kB                     bios_grub, legacy_boot\n 2      3146kB  540MB   537MB   fat32              boot, esp\n 3      540MB   40.0GB  39.5GB  zfs\n        40.0GB  500GB   460GB   Free Space\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Make new partition. You could use 100% but I like this unit to last a little longer so I leave a 5% free space. So I end partition at 470GB insteadl 500GB.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(parted) mkpart                                                           \nPartition name?  []?                                                      \nFile system type?  [ext2]? zfs                                            \nStart? 40.0GB                                                             \nEnd? 470GB                                                                \n(parted) p                                                                \nModel: Samsung SSD 980 500GB (nvme)\nDisk /dev/nvme2n1: 500GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n\nNumber  Start   End     Size    File system  Name  Flags\n 1      2097kB  3146kB  1049kB                     bios_grub, legacy_boot\n 2      3146kB  540MB   537MB   fat32              boot, esp\n 3      540MB   40.0GB  39.5GB  zfs\n 4      40.0GB  470GB   430GB   zfs\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a zpool with extra space")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"zpool create boot-extra  /dev/disk/by-id/nvme-Samsung_SSD_980_500GB_S64AAA0T012345B-part4\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Export the poool so TrueNAS can import it")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"zpool export boot-extra\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In TrueNAS UI ",(0,r.kt)("inlineCode",{parentName:"li"},"Storage")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Import Pool")," -> select ",(0,r.kt)("inlineCode",{parentName:"li"},"boot-extra"))),(0,r.kt)("h3",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.truenas.com/community/threads/howto-setup-a-pair-of-larger-ssds-for-boot-pool-and-data.81409/"},"https://www.truenas.com/community/threads/howto-setup-a-pair-of-larger-ssds-for-boot-pool-and-data.81409/"))))}c.isMDXComponent=!0}}]);