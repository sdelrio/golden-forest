"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[3289],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=t.createContext({}),c=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return r?t.createElement(f,i(i({ref:n},s),{},{components:r})):t.createElement(f,i({ref:n},s))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},41329:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(83117),a=(r(67294),r(3905));const o={},i="Dockerfile for Java",l={unversionedId:"Containers/Docker/dockerfile-java",id:"Containers/Docker/dockerfile-java",title:"Dockerfile for Java",description:"Starting with Java 9 you could build a custom JRE with just the libraries you need using the tool jlink, provided with the Java 9 JDK.",source:"@site/docs/Containers/Docker/dockerfile-java.md",sourceDirName:"Containers/Docker",slug:"/Containers/Docker/dockerfile-java",permalink:"/docs/Containers/Docker/dockerfile-java",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Containers/Docker/dockerfile-java.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker for windows",permalink:"/docs/Containers/Docker/docker-windows"},next:{title:"Dockerfile for node.js",permalink:"/docs/Containers/Docker/dockerfile-node"}},d={},c=[{value:"Java 9",id:"java-9",level:2},{value:"First stage",id:"first-stage",level:3},{value:"Second stage",id:"second-stage",level:3},{value:"bin/run",id:"binrun",level:4},{value:"References",id:"references",level:2}],s={toc:c};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dockerfile-for-java"},"Dockerfile for Java"),(0,a.kt)("p",null,"Starting with Java 9 you could build a custom JRE with just the libraries you need using the tool ",(0,a.kt)("inlineCode",{parentName:"p"},"jlink"),", provided with the Java 9 JDK."),(0,a.kt)("p",null,"The combination of a small Alpine Linux distro (5 MB) and our stripped down JRE (30 MB), could results in a total Docker image size of approximately 35 MB. By comparison, the ",(0,a.kt)("inlineCode",{parentName:"p"},"openjdk:8-jre-alpine")," Docker image is 80 MB. A reduction of more than 50 percent! "),(0,a.kt)("h2",{id:"java-9"},"Java 9"),(0,a.kt)("h3",{id:"first-stage"},"First stage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"FROM alpine:3.6 AS builder\n\nMAINTAINER JDriven <info@jdriven.com>\n\nENV JAVA_HOME=/opt/jdk \\\n    PATH=${PATH}:/opt/jdk/bin \\\n    LANG=C.UTF-8\n\nRUN set -ex && \\\n    apk add --no-cache bash && \\\n    wget http://download.java.net/java/jdk9-alpine/archive/181/binaries/jdk-9-ea+181_linux-x64-musl_bin.tar.gz -O jdk.tar.gz && \\\n    mkdir -p /opt/jdk && \\\n    tar zxvf jdk.tar.gz -C /opt/jdk --strip-components=1 && \\\n    rm jdk.tar.gz && \\\n    rm /opt/jdk/lib/src.zip\n\nWORKDIR /app\n\nCOPY backend-module/target/backend-module-1.0-SNAPSHOT.jar .\nCOPY frontend-module/target/frontend-module-1.0-SNAPSHOT.jar .\n\nRUN jlink --module-path backend-module-1.0-SNAPSHOT.jar:frontend-module-1.0-SNAPSHOT.jar:$JAVA_HOME/jmods \\\n        --add-modules com.jdriven.java9runtime.frontend \\\n        --launcher run=com.jdriven.java9runtime.frontend/com.jdriven.java9runtime.frontend.FrontendApplication \\\n        --output dist \\\n        --compress 2 \\\n        --strip-debug \\\n        --no-header-files \\\n        --no-man-pages\n")),(0,a.kt)("h3",{id:"second-stage"},"Second stage"),(0,a.kt)("p",null,"Copies the custom JRE into our image and runs it"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'FROM alpine:3.6\n\nMAINTAINER JDriven <info@jdriven.com>\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist/ ./\n\nENTRYPOINT ["bin/run"]\n')),(0,a.kt)("h4",{id:"binrun"},"bin/run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/sh\nJLINK_VM_OPTIONS=\nDIR=`dirname $0`\n$DIR/java $JLINK_VM_OPTIONS -m com.jdriven.java9runtime.frontend/com.jdriven.java9runtime.frontend.FrontendApplication $@\n")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://blog.jdriven.com/2017/11/modular-java-9-runtime-docker-alpine/"},"2017: Slim modular Java 9 runtime Docker image with Alpine Linux"))))}u.isMDXComponent=!0}}]);