"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[6541],{44813:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>i});var a=r(87462),s=(r(67294),r(3905)),n=r(61839);const o={},l="HPA autoscalers",u={unversionedId:"Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers",id:"Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers",title:"HPA autoscalers",description:"Autoscale using Prometheus",source:"@site/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers.md",sourceDirName:"Cloud-Platform/Kubernetes/Concepts/HPA",slug:"/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Horizontal Pod Autoscaler",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/HPA/"},next:{title:"k8s Network Policies",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies"}},m={},i=[{value:"Autoscale using Prometheus",id:"autoscale-using-prometheus",level:2},{value:"Architecture Overview",id:"architecture-overview",level:3},{value:"Requirements",id:"requirements",level:3},{value:"Deployment",id:"deployment",level:4},{value:"Prometheus Adapter",id:"prometheus-adapter",level:4},{value:"References",id:"references",level:3}],c={toc:i},p="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"hpa-autoscalers"},"HPA autoscalers"),(0,s.kt)("h2",{id:"autoscale-using-prometheus"},"Autoscale using Prometheus"),(0,s.kt)("h3",{id:"architecture-overview"},"Architecture Overview"),(0,s.kt)(n.G,{chart:"\n  flowchart TB;\n\n    HPA --custom/metrics.k8s.io/v1beta1--\x3e CMAPI[Custom Metrics API]\n    CMAPI --\x3e Prometheus\n    Prometheus --/metrics--\x3e Pods\n\n    classDef red fill:#eaa,stroke:#c00,stroke-width:2px\n    classDef green fill:#beb,stroke:#ada,stroke-width:2px\n    classDef blue fill:#bbe,stroke:#aad,stroke-width:2px\n\n\n    class HPA red\n    class CMAPI green\n    class Prometheus green\n    class Pods blue\n",mdxType:"Mermaid"}),(0,s.kt)("h3",{id:"requirements"},"Requirements"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"External metrics provider (k8s 1.10+)"),(0,s.kt)("li",{parentName:"ul"},"Prometheus"),(0,s.kt)("li",{parentName:"ul"},"Prometheus adapter")),(0,s.kt)("h4",{id:"deployment"},"Deployment"),(0,s.kt)("p",null,"Make sure Deployment gathers prometheus metrics:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'  template:\n    metadata:\n      annotations:\n        prometheus.io/path: "/metrics"\n        prometheus.io/scrape: "true"\n        prometheus.io/port: "8000"\n')),(0,s.kt)("h4",{id:"prometheus-adapter"},"Prometheus Adapter"),(0,s.kt)("p",null,"Add a ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/prometheus-community/helm-charts/blob/cd5c69a2ef0a3d5f3478374ba495d27a57b444d4/charts/prometheus-adapter/values.yaml#L85-L87"},"custom rule")," on prometheus or a Configmap for the adapter config and mount it as volume on the prometheus adapter deployment:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"configmap")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: adapter-config\n  namespace: monitoring\ndata:\n  config.yaml: |\n    rules:\n    - seriesQuery: \'nginx_vts_server_requests_total\'\n      resources:\n        overrides:\n          kubernetes_namespace:\n            resource: namespace\n          kubernetes_pod_name:\n            resource: pod\n      name:\n        matches: "^(.*)_total"\n        as: "${1}_per_second"\n      metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>))\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"prometheus adapter deployment")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"        volumeMounts:\n        - mountPath: /etc/adapter/\n          name: config\n          readOnly: true\n      volumes:\n      - name: config\n        configMap:\n          name: adapter-config\n")),(0,s.kt)("h3",{id:"references"},"References"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://pet2cattle.com/2022/04/prometheus-hpa-external-metrics"},"https://pet2cattle.com/2022/04/prometheus-hpa-external-metrics")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://medium.com/the-metricfire-blog/prometheus-metrics-based-autoscaling-in-kubernetes-3f4388501c8e"},"https://medium.com/the-metricfire-blog/prometheus-metrics-based-autoscaling-in-kubernetes-3f4388501c8e")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.metricfire.com/blog/prometheus-metrics-based-autoscaling-in-kubernetes/"},"https://www.metricfire.com/blog/prometheus-metrics-based-autoscaling-in-kubernetes/"))))}d.isMDXComponent=!0}}]);