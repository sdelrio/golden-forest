"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[2131],{20938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));n(61839);const a={},i="containerd",c={unversionedId:"Containers/CRI/containerd",id:"Containers/CRI/containerd",title:"containerd",description:"Standar container runtime, best replacement for docker in k8s since v1.20",source:"@site/docs/Containers/CRI/containerd.md",sourceDirName:"Containers/CRI",slug:"/Containers/CRI/containerd",permalink:"/docs/Containers/CRI/containerd",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Containers/CRI/containerd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Containers",permalink:"/docs/Containers/"},next:{title:"crictl",permalink:"/docs/Containers/CRI/crictl"}},s={},l=[{value:"Basic usage",id:"basic-usage",level:2}],d={toc:l},m="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"containerd"},"containerd"),(0,o.kt)("p",null,"Standar container runtime, best replacement for docker in k8s since v1.20\n(docker-shim was deprecated then)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://containerd.io/"},"https://containerd.io/"))),(0,o.kt)("h1",{id:"nerdctl"},(0,o.kt)("a",{parentName:"h1",href:"https://github.com/containerd/nerdctl"},"nerdctl")),(0,o.kt)("p",null,"contaiNERD CTL - Docker-compatible CLI for containerd, with support for Compose, Rootless, eStargz, OCIcrypt, IPFS, ..."),(0,o.kt)("p",null,"Basically replace docker UX but in containerd"),(0,o.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nerdctl run -it --rm alpine \n\nnerdctl build -t foo /some-dockerfile-directory\n\nnerdctl build -o type=local,dest=. /some-dockerfile-directory\n\nnerdctl build --platform linux/arm/v7,linux/arm64,linux/amd64 -t multiarchdemo .\n\nnerdctl compose -f ./examples/compose-wordpress/docker-compose.yaml up\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/containerd/nerdctl#command-reference"},"Command reference")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/containerd/nerdctl#rootless-mode"},"Rootless mode")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://pet2cattle.com/2022/02/rootless-containers-nerdctl"},"Running rootless containers with nerdctl"))))}p.isMDXComponent=!0}}]);