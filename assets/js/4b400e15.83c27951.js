"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[2131],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},20938:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(83117),o=(r(67294),r(3905));const a={},i="containerd",c={unversionedId:"Containers/CRI/containerd",id:"Containers/CRI/containerd",title:"containerd",description:"Standar container runtime, best replacement for docker in k8s since v1.20",source:"@site/docs/Containers/CRI/containerd.md",sourceDirName:"Containers/CRI",slug:"/Containers/CRI/containerd",permalink:"/docs/Containers/CRI/containerd",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Containers/CRI/containerd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Containers",permalink:"/docs/Containers/"},next:{title:"crictl",permalink:"/docs/Containers/CRI/crictl"}},l={},s=[{value:"Basic usage",id:"basic-usage",level:2}],p={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"containerd"},"containerd"),(0,o.kt)("p",null,"Standar container runtime, best replacement for docker in k8s since v1.20\n(docker-shim was deprecated then)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://containerd.io/"},"https://containerd.io/"))),(0,o.kt)("h1",{id:"nerdctl"},(0,o.kt)("a",{parentName:"h1",href:"https://github.com/containerd/nerdctl"},"nerdctl")),(0,o.kt)("p",null,"contaiNERD CTL - Docker-compatible CLI for containerd, with support for Compose, Rootless, eStargz, OCIcrypt, IPFS, ..."),(0,o.kt)("p",null,"Basically replace docker UX but in containerd"),(0,o.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nerdctl run -it --rm alpine \n\nnerdctl build -t foo /some-dockerfile-directory\n\nnerdctl build -o type=local,dest=. /some-dockerfile-directory\n\nnerdctl build --platform linux/arm/v7,linux/arm64,linux/amd64 -t multiarchdemo .\n\nnerdctl compose -f ./examples/compose-wordpress/docker-compose.yaml up\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/containerd/nerdctl#command-reference"},"Command reference")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/containerd/nerdctl#rootless-mode"},"Rootless mode")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://pet2cattle.com/2022/02/rootless-containers-nerdctl"},"Running rootless containers with nerdctl"))))}d.isMDXComponent=!0}}]);