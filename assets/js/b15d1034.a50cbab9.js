"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[6129],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9853:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),i=["components"],l={},s="K8s nginx-ingress",u={unversionedId:"Cloud-Platform/Kubernetes/k8s-nginx",id:"Cloud-Platform/Kubernetes/k8s-nginx",title:"K8s nginx-ingress",description:"External OAUTH Authentication",source:"@site/docs/Cloud-Platform/Kubernetes/k8s-nginx.md",sourceDirName:"Cloud-Platform/Kubernetes",slug:"/Cloud-Platform/Kubernetes/k8s-nginx",permalink:"/docs/Cloud-Platform/Kubernetes/k8s-nginx",editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Cloud-Platform/Kubernetes/k8s-nginx.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"K8s Machine Learning",permalink:"/docs/Cloud-Platform/Kubernetes/k8s-ml"},next:{title:"Kubernetes patterns",permalink:"/docs/Cloud-Platform/Kubernetes/k8s-patterns"}},p=[{value:"External OAUTH Authentication",id:"external-oauth-authentication",children:[],level:2}],c={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"k8s-nginx-ingress"},"K8s nginx-ingress"),(0,o.kt)("h2",{id:"external-oauth-authentication"},(0,o.kt)("a",{parentName:"h2",href:"https://kubernetes.github.io/ingress-nginx/examples/auth/oauth-external-auth/"},"External OAUTH Authentication")),(0,o.kt)("p",null,"Requires:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A domain name for the ingress rule: ",(0,o.kt)("inlineCode",{parentName:"li"},"https://www.mydomain.com")),(0,o.kt)("li",{parentName:"ul"},"Autorization callback url, domain + ",(0,o.kt)("inlineCode",{parentName:"li"},"/oauth2/callback"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"https://www.mydomain.com/oauth/callback")),(0,o.kt)("li",{parentName:"ul"},"Register new application in the OAUTH provider, sample github: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/settings/applications/new"},"https://github.com/settings/applications/new")),(0,o.kt)("li",{parentName:"ul"},"Aplication for the authorization callback:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    k8s-app: oauth2-proxy\n  name: oauth2-proxy\n  namespace: kube-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      k8s-app: oauth2-proxy\n  template:\n    metadata:\n      labels:\n        k8s-app: oauth2-proxy\n    spec:\n      containers:\n      - args:\n        - --provider=github\n        - --email-domain=*\n        - --upstream=file:///dev/null\n        - --http-address=0.0.0.0:4180\n        # Register a new application\n        # https://github.com/settings/applications/new\n        env:\n        # Example: your github client id, like the login\n        - name: OAUTH2_PROXY_CLIENT_ID\n          value: <Client ID>\n        # Example: your github client secret\n        - name: OAUTH2_PROXY_CLIENT_SECRET\n          value: <Client Secret>\n        # docker run -ti --rm python:3-alpine python -c \\\n        #  'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'\n        - name: OAUTH2_PROXY_COOKIE_SECRET\n          value: SECRET\n        image: quay.io/oauth2-proxy/oauth2-proxy:latest\n        imagePullPolicy: Always\n        name: oauth2-proxy\n        ports:\n        - containerPort: 4180\n          protocol: TCP\n\n---\n\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    k8s-app: oauth2-proxy\n  name: oauth2-proxy\n  namespace: kube-system\nspec:\n  ports:\n  - name: http\n    port: 4180\n    protocol: TCP\n    targetPort: 4180\n  selector:\n    k8s-app: oauth2-proxy\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Annotate your ingress:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"\n    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"\n')))}m.isMDXComponent=!0}}]);