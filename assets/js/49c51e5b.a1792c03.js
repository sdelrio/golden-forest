"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[6941],{2871:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));n(1839);const o={},r="Python Unit testing",l={unversionedId:"Coding/Python/python-unit-test",id:"Coding/Python/python-unit-test",title:"Python Unit testing",description:"Beyond Unit Tess",source:"@site/docs/Coding/Python/python-unit-test.md",sourceDirName:"Coding/Python",slug:"/Coding/Python/python-unit-test",permalink:"/docs/Coding/Python/python-unit-test",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Coding/Python/python-unit-test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python interesting libraries",permalink:"/docs/Coding/Python/python-libraries"},next:{title:"Testing Frameworks",permalink:"/docs/Coding/Testing/testing-frameworks"}},s={},p=[{value:"Beyond Unit Tess",id:"beyond-unit-tess",level:2},{value:"Mocking",id:"mocking",level:2},{value:"Boilerplate",id:"boilerplate",level:2},{value:"References",id:"references",level:2}],u={toc:p},h="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(h,(0,i.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"python-unit-testing"},"Python Unit testing"),(0,a.kt)("h2",{id:"beyond-unit-tess"},"Beyond Unit Tess"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://hillelwayne.com/talks/beyond-unit-tests/"},"PyCon 2018: Beyond Unit Tests")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/deadpixi/contracts"},"GitHub dpcontracts"))),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"dpcontracts")," Sample:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@require("l must not be empt "),\nlambda args: len(arg.1) >0)\ndef tail(l: List[Any]) -> List[Any]:\n\n  output = l[1:]\n  assert [l[0]] + output == l\n  return output\n')),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@require("l must not be empt "),\n@ensure("result is tail of list",\nlambda a, r: [a.l[0]] + r == a.l)\nlambda args: len(arg.1) >0)\ndef tail(l: List[Any]) -> List[Any]:\n  return l[1:]\n')))),(0,a.kt)("h2",{id:"mocking"},"Mocking"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/unittest.mock.html"},"python doc ",(0,a.kt)("inlineCode",{parentName:"a"},"unittest.mock"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.toptal.com/python/an-introduction-to-mocking-in-python"},"An introduction to mocking in python"))),(0,a.kt)("h2",{id:"boilerplate"},"Boilerplate"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.python-boilerplate.com/py3+argparse+unittest"},"python 3 + argparse + unittest"))),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.bogotobogo.com/python/python_private_attributes_methods.php"},"2018: ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://code.tutsplus.com/tutorials/write-professional-unit-tests-in-python--cms-25835"},"2016: Write Professional Unit Tests in Python")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=ww1UsGZV8fQ"},"PyCon 2018: Demystifying the patch funcction")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=pMgmKJyWKn8"},"PyCon 2018: Type-checked Python in the real world")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=G1lDk_WKXvY"},"PyCon 2018: Automatic Code Quality"))))}m.isMDXComponent=!0}}]);