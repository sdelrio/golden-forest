"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[9753],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),p=i,f=d["".concat(o,".").concat(p)]||d[p]||m[p]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6637:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],s={},o="KVM/QEMU",u={unversionedId:"OS/GNU-Linux/KVM-QEMU/kvm-qemu",id:"OS/GNU-Linux/KVM-QEMU/kvm-qemu",isDocsHomePage:!1,title:"KVM/QEMU",description:"qemu.conf",source:"@site/docs/OS/GNU-Linux/KVM-QEMU/kvm-qemu.md",sourceDirName:"OS/GNU-Linux/KVM-QEMU",slug:"/OS/GNU-Linux/KVM-QEMU/kvm-qemu",permalink:"/docs/OS/GNU-Linux/KVM-QEMU/kvm-qemu",editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/OS/GNU-Linux/KVM-QEMU/kvm-qemu.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bcache SSD caching",permalink:"/docs/OS/GNU-Linux/HDs/ssd-cache"},next:{title:"Linux 5.15",permalink:"/docs/OS/GNU-Linux/Kernel/linux-5.15"}},c=[{value:"qemu.conf",id:"qemuconf",children:[{value:"UEFI BIOS",id:"uefi-bios",children:[{value:"Disable securty",id:"disable-securty",children:[],level:4}],level:3}],level:2},{value:"virtio-win isos",id:"virtio-win-isos",children:[],level:2},{value:"virtio-fs",id:"virtio-fs",children:[{value:"Requirements",id:"requirements",children:[],level:3},{value:"CPU section with NUMA",id:"cpu-section-with-numa",children:[],level:3},{value:"memoryBacking with source and access",id:"memorybacking-with-source-and-access",children:[],level:3},{value:"filesystem with virtiofs",id:"filesystem-with-virtiofs",children:[],level:3},{value:"Ubuntu 20.04",id:"ubuntu-2004",children:[{value:"CLI install",id:"cli-install",children:[],level:4},{value:"Ansible install",id:"ansible-install",children:[],level:4}],level:3}],level:2}],m={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kvmqemu"},"KVM/QEMU"),(0,a.kt)("h2",{id:"qemuconf"},"qemu.conf"),(0,a.kt)("h3",{id:"uefi-bios"},"UEFI BIOS"),(0,a.kt)("p",null,"To enable UEFI bios override (VGA passwthrough and others). Uncomment the ",(0,a.kt)("inlineCode",{parentName:"p"},"nvram")," config."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/etc/libvirt/qemu.conf"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# Later, when libvirt creates per domain variable store, this list is\n# searched for the master image. The UEFI firmware can be called\n# differently for different guest architectures. For instance, it\'s OVMF\n# for x86_64 and i686, but it\'s AAVMF for aarch64. The libvirt default\n# follows this scheme.\n\nnvram = [\n   "/usr/share/OVMF/OVMF_CODE.fd:/usr/share/OVMF/OVMF_VARS.fd",\n   "/usr/share/OVMF/OVMF_CODE.secboot.fd:/usr/share/OVMF/OVMF_VARS.fd",\n   "/usr/share/AAVMF/AAVMF_CODE.fd:/usr/share/AAVMF/AAVMF_VARS.fd",\n   "/usr/share/AAVMF/AAVMF32_CODE.fd:/usr/share/AAVMF/AAVMF32_VARS.fd",\n   "/usr/share/OVMF/OVMF_CODE.ms.fd:/usr/share/OVMF/OVMF_VARS.ms.fd"\n]\n')),(0,a.kt)("h4",{id:"disable-securty"},"Disable securty"),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},'security_driver = "none"')," if you need some special privilege, like VGA or USB passthrough."),(0,a.kt)("h2",{id:"virtio-win-isos"},"virtio-win isos"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/"},"https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/"))),(0,a.kt)("h2",{id:"virtio-fs"},"virtio-fs"),(0,a.kt)("p",null,"Virtiofs is a shared file system that lets virtual machines access a directory tree on the host. Unlike existing approaches, it is designed to offer local file system semantics and performance. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://virtio-fs.gitlab.io/"},"https://virtio-fs.gitlab.io/"))),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Linux 5.4")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ uname -rv\n5.4.0-90-generic #101-Ubuntu SMP Fri Oct 15 20:00:55 UTC 2021\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"QEMU 5.0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ qemu-aarch64_be-static --version\nqemu-aarch64_be version 5.0.0 (Debian 1:5.0-5ubuntu6~ppa0)\nCopyright (c) 2003-2020 Fabrice Bellard and the QEMU Project developers\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"libvirt 6.2")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ libvirtd -V\nlibvirtd (libvirt) 6.6.0\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"memory_backend_dir")," enabled on libvirt.conf")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'grep memoery_backing_dir /etc/libvirt/qemu.conf\nmemory_backing_dir = "/var/lib/libvirt/qemu/ram"\n')),(0,a.kt)("h3",{id:"cpu-section-with-numa"},"CPU section with NUMA"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'  <cpu mode="host-model" check="none">\n    <topology sockets="1" dies="1" cores="6" threads="2"/>\n    <numa>\n      <cell id="0" cpus="0-11" memory="16" unit="GiB" memAccess="shared"/>\n    </numa>\n  </cpu>\n')),(0,a.kt)("h3",{id:"memorybacking-with-source-and-access"},"memoryBacking with source and access"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'  <memoryBacking>\n    <hugepages/>\n    <source type="memfd"/>\n    <access mode="shared"/>\n  </memoryBacking>\n')),(0,a.kt)("h3",{id:"filesystem-with-virtiofs"},"filesystem with virtiofs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"source dir will be a path on the hots machine"),(0,a.kt)("li",{parentName:"ul"},"target dir is the name of the mounted drive in the guest machine")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'  <devices>\n   ...\n    <filesystem type="mount" accessmode="passthrough">\n      <driver type="virtiofs" queue="1024"/>\n      <source dir="/hddpool/imagenes"/>\n      <target dir="mount_tag"/>\n    </filesystem>\n   ...\n  </devices>\n')),(0,a.kt)("h3",{id:"ubuntu-2004"},"Ubuntu 20.04"),(0,a.kt)("p",null,"QEMU 5.0, libvirt 6.6, virtmanager 3.0, are available for Ubuntu 20.04:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://launchpad.net/~jacob/+archive/ubuntu/virtualisation?field.series_filter=focal"},"https://launchpad.net/~jacob/+archive/ubuntu/virtualisation?field.series_filter=focal"))),(0,a.kt)("h4",{id:"cli-install"},"CLI install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo add-apt-repository ppa:jacob/virtualisation\nsudo apt-get update\n")),(0,a.kt)("h4",{id:"ansible-install"},"Ansible install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: "Add Jacob Zimmermann APT repo"\n  apt_repository:\n    repo: ppa:jacob/virtualisation\n    state: present\n    codename: focal\n\n    - name: "APT VM packages"\n  apt:\n    name:\n      - qemu-kvm\n      - qemu-utils\n      - libvirt-daemon-system\n      - libvirt-clients\n      - virt-manager\n      - ovmf\n      - libhugetlbfs-bin      # hugeadm: Tools to ease use of hugetlbfs\n')))}d.isMDXComponent=!0}}]);