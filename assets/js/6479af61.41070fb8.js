"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[1286],{76240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=n(87462),l=(n(67294),n(3905)),r=n(61839);const s={},a="k8s Network Policies",i={unversionedId:"Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies",id:"Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies",title:"k8s Network Policies",description:"It allows you to control the flow of the traffic to specify how the Pod is allowed to communicate (IP address and port).",source:"@site/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies.md",sourceDirName:"Cloud-Platform/Kubernetes/Concepts/Networking",slug:"/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/Cloud-Platform/Kubernetes/Concepts/Networking/k8s-network-policies.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HPA autoscalers",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/HPA/hpa-autoscalers"},next:{title:"K8s Secrets",permalink:"/docs/Cloud-Platform/Kubernetes/Concepts/k8s-secrets"}},p={},c=[],k={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"k8s-network-policies"},"k8s Network Policies"),(0,l.kt)("p",null,"It allows you to control the flow of the traffic to specify how the Pod is allowed to communicate (IP address and port)."),(0,l.kt)("p",null,"You can communicate with:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Other allowed pods."),(0,l.kt)("li",{parentName:"ol"},"Alowed Namespaces."),(0,l.kt)("li",{parentName:"ol"},"IP Blocks")),(0,l.kt)("p",null,"By default no traffic is filtered until a pod gets a policy, then, only the specified ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/"},(0,l.kt)("inlineCode",{parentName:"a"},"NetworkPolicy"))," connections are allowed."),(0,l.kt)(r.G,{chart:'    flowchart BT\n\n        subgraph level-1 [" "]\n            subgraph sub-level-1 ["and/or"]\n              ps1[podSelector]\n              ns1[namespaceSelector]\n            end\n            ip1[ipBlock]\n        end\n        subgraph level-2 ["and/or"]\n            subgraph sub-level-2 ["and/or"]\n            ps2[podSelector]\n            ns2[namespaceSelector]\n            end\n            ip2[ipBlock]\n        end\n\n        from --- np\n        to --- np\n\n        subgraph kind[" "]\n            np[NetworkPolicy]\n        end\n\n        ps1 --- from\n        ns1 --- from\n        ip1 --- from\n\n\n        ps2 --- to\n        ns2 --- to\n        ip2 --- to\n\n        subgraph section-from ["ingress"]\n            from\n        end\n        subgraph section-to ["egress"]\n            to\n        end\n\n        linkStyle default stroke-width:2px,fill:none,stroke:#c0c0c0\n\n        classDef green fill:#beb,stroke:#ada,stroke-width:2px\n        classDef gray fill:#eee,stroke:#999,stroke-width:2px\n        classDef yellow fill:#eeb,stroke:#dda,stroke-width:2px\n        classDef section color:#808080,fill:none,stroke:#c0c0c0,stroke-width:2px\n        classDef npstyle color:#808020,fill:#F0F0F0,stroke:#c0c020,stroke-width:2px\n        classDef ext color:#808020,fill:none,stroke:#606010,stroke-width:2px\n\n        class level-1,level-2,section-from,section-to,kind section\n        class sub-level-1,sub-level-2 gray\n        class np npstyle',mdxType:"Mermaid"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"NetworkPolicy "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ingress[from]"),": Traffic allowed to go ",(0,l.kt)("strong",{parentName:"li"},"into")," the pod.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"selector"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"egress[to]"),": Traffic allowed to go ",(0,l.kt)("strong",{parentName:"li"},"out")," of pod.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"selector"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"selectors\nJust as in the deployments, we can use labels to determine which Pods or namespaces the NetworkPolicy applies:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"podSelector:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"matchLabels:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"key: value"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"namespaceSelector:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"matchLabels"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"key: value"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ipBlock:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cidr:")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"except:")," list of cidrs")))))))}u.isMDXComponent=!0}}]);