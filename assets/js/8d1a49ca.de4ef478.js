"use strict";(self.webpackChunkgolden_forest_website=self.webpackChunkgolden_forest_website||[]).push([[6512],{91398:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>u});var a=s(87462),l=(s(67294),s(3905));s(61839);const n={title:"ZSysctl",date:20211106,author:"sdelrio",tags:["zfs","zsys"]},r="Zsys",o={unversionedId:"OS/GNU-Linux/ZFS/zsys",id:"OS/GNU-Linux/ZFS/zsys",title:"ZSysctl",description:"ZSys is a daemon and a client for zfs systemtargeting and enhanced ZOL experience. It was included in Ubuntu 20 and Linux Mint 20.",source:"@site/docs/OS/GNU-Linux/ZFS/zsys.md",sourceDirName:"OS/GNU-Linux/ZFS",slug:"/OS/GNU-Linux/ZFS/zsys",permalink:"/docs/OS/GNU-Linux/ZFS/zsys",draft:!1,editUrl:"https://github.com/sdelrio/golden-forest/edit/master/docs/OS/GNU-Linux/ZFS/zsys.md",tags:[{label:"zfs",permalink:"/docs/tags/zfs"},{label:"zsys",permalink:"/docs/tags/zsys"}],version:"current",frontMatter:{title:"ZSysctl",date:20211106,author:"sdelrio",tags:["zfs","zsys"]},sidebar:"tutorialSidebar",previous:{title:"ZFS",permalink:"/docs/OS/GNU-Linux/ZFS/"},next:{title:"Automatic Upgrades",permalink:"/docs/OS/GNU-Linux/automatic-upgrades"}},i={},u=[{value:"Features",id:"features",level:2},{value:"Sample ZSys config",id:"sample-zsys-config",level:2},{value:"Garbage collector",id:"garbage-collector",level:2},{value:"Call GC",id:"call-gc",level:3},{value:"Status of the GC",id:"status-of-the-gc",level:3},{value:"GC timers",id:"gc-timers",level:3},{value:"Refresh",id:"refresh",level:2},{value:"Reload",id:"reload",level:2},{value:"Remove state",id:"remove-state",level:2},{value:"User state",id:"user-state",level:3},{value:"System state",id:"system-state",level:3},{value:"Whole system",id:"whole-system",level:3},{value:"User State without any dependency but linked to a system state",id:"user-state-without-any-dependency-but-linked-to-a-system-state",level:3},{value:"References",id:"references",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...s}=e;return(0,l.kt)(d,(0,a.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"zsys"},"Zsys"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ubuntu/zsys"},"ZSys")," is a daemon and a client for zfs systemtargeting and enhanced ZOL experience. It was included in Ubuntu 20 and Linux Mint 20."),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Every time you do an apt-get install the daemon will snapshot your OS pool.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"At OS boot time you can select a previous snapshot."))),(0,l.kt)("h2",{id:"sample-zsys-config"},"Sample ZSys config"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/etc/zsys.conf"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"history:\n  # https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/\n  # Keep at least n history entry per unit of time if enough of them are present\n  # The order condition the bucket start and end dates (from most recent to oldest)\n  gcstartafter: 1\n  keeplast: 10 # Minimum number of recent states to keep.\n  #    - name:             Abitrary name of the bucket\n  #      buckets:          Number of buckets over the interval\n  #      bucketlength:     Length of each bucket in days\n  #      samplesperbucket: Number of datasets to keep in each bucket\n  gcrules:\n    - name: PreviousDay\n      buckets: 1\n      bucketlength: 1\n      samplesperbucket: 3\n    - name: PreviousWeek\n      buckets: 5\n      bucketlength: 1\n      samplesperbucket: 1\n    - name: PreviousMonth\n      buckets: 2\n      bucketlength: 14\n      samplesperbucket: 1\ngeneral:\n  # Minimal free space required before taking a snapshot\n  minfreepoolspace: 18\n  # Daemon timeout in seconds\n  timeout: 60\n")),(0,l.kt)("h2",{id:"garbage-collector"},"Garbage collector"),(0,l.kt)("h3",{id:"call-gc"},"Call GC"),(0,l.kt)("p",null,"Call zysysd garbage collection without waiting daily INFO output"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"zsysctl service gc --all -v\n")),(0,l.kt)("p",null,"To see with extra debug info add ",(0,l.kt)("inlineCode",{parentName:"p"},"-vv")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"zsysctl service gc --all -vv\n")),(0,l.kt)("h3",{id:"status-of-the-gc"},"Status of the GC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status zsys-gc\n")),(0,l.kt)("h3",{id:"gc-timers"},"GC timers"),(0,l.kt)("p",null,"GC collecting timers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl list-timers zsys-gc\n")),(0,l.kt)("p",null,"GC collecting timers loaded but inactive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl list-timers zsys-gc --all\n")),(0,l.kt)("h2",{id:"refresh"},"Refresh"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Re-Scan any ZFS datasheet")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"zsysctl service refresh\n")),(0,l.kt)("h2",{id:"reload"},"Reload"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Reload ",(0,l.kt)("inlineCode",{parentName:"li"},"zsysd")," daemon")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"zsysctl service reload\n")),(0,l.kt)("h2",{id:"remove-state"},"Remove state"),(0,l.kt)("h3",{id:"user-state"},"User state"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ zsysctl show --full |grep r48a3r\n$ zsysctl state remove r48a3r\nrpool/USERDATA/sdelrio_0y06wn@autozsys_r48a3r will be detached from system state rpool/ROOT/ubuntu_awq93l@autozsys_r48a3r\n")),(0,l.kt)("h3",{id:"system-state"},"System state"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo zsysctl state remove r48a3r\n")),(0,l.kt)("h3",{id:"whole-system"},"Whole system"),(0,l.kt)("p",null,"adding ",(0,l.kt)("inlineCode",{parentName:"p"},"--system")," (",(0,l.kt)("inlineCode",{parentName:"p"},"/boot")," included)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo zsysctl state remove r48a3r --system\n")),(0,l.kt)("h3",{id:"user-state-without-any-dependency-but-linked-to-a-system-state"},"User State without any dependency but linked to a system state"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ zsysctl state remove rpool/USERDATA/didrocks_e2jj0s@autozsys_iynia9\nrpool/USERDATA/didrocks_e2jj0s@autozsys_iynia9 will be detached from system state rpool/ROOT/ubuntu_qiq15o@autozsys_iynia9\n\nWould you like to proceed [y/N]? y\n")),(0,l.kt)("h2",{id:"references"},"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ubuntu/zsys"},"https://github.com/ubuntu/zsys")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/"},"https://didrocks.fr/2020/06/04/zfs-focus-on-ubuntu-20.04-lts-zsys-state-collection/"))))}m.isMDXComponent=!0}}]);